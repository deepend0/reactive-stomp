plugins {
    id 'io.quarkus' version "${quarkusPluginVersion}"
    id 'io.quarkus.extension' version "${quarkusPluginVersion}"
}

dependencies {
    implementation platform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-core'
    implementation 'io.quarkus:quarkus-messaging'
    implementation 'io.quarkus:quarkus-jackson'
    implementation 'io.vertx:vertx-stomp:4.5.14'

    testImplementation 'io.quarkus:quarkus-junit5-mockito'
    testImplementation 'org.awaitility:awaitility:4.3.0'
}

sourceSets {
    integrationTest {
        java.srcDir "$projectDir/src/integrationTest/java"
        resources.srcDir "$projectDir/src/integrationTest/resources"
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation, testImplementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.named('processIntegrationTestResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

quarkusExtension {
    deploymentModule "reactive-stomp-deployment"
}